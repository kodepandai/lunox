"use strict";(self.webpackChunklunox=self.webpackChunklunox||[]).push([[8451],{9613:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>g});var n=t(9496);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return t?n.createElement(g,a(a({ref:r},u),{},{components:t})):n.createElement(g,a({ref:r},u))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<l;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7983:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=t(1163),o=(t(9496),t(9613));const l={sidebar_position:3},a="Controllers",s={unversionedId:"basics/controllers",id:"basics/controllers",title:"Controllers",description:"Introduction",source:"@site/docs/basics/controllers.md",sourceDirName:"basics",slug:"/basics/controllers",permalink:"/docs/basics/controllers",draft:!1,editUrl:"https://github.com/kodepandai/lunox-website/edit/main/docs/basics/controllers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Middleware",permalink:"/docs/basics/middleware"},next:{title:"HTTP Request",permalink:"/docs/basics/request"}},i={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Writing Controllers",id:"writing-controllers",level:2},{value:"Object-Based Controller",id:"object-based-controller",level:3},{value:"Class-Based Controller",id:"class-based-controller",level:3},{value:"Using Controllers in Routes",id:"using-controllers-in-routes",level:2},{value:"Controller Middleware",id:"controller-middleware",level:2}],u={toc:c},d="wrapper";function p(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"controllers"},"Controllers"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Instead of defining all of your request handling logic as closures in your route files, you may wish to organize this behavior using ",(0,o.kt)("strong",{parentName:"p"},"controllers"),"."),(0,o.kt)("h2",{id:"writing-controllers"},"Writing Controllers"),(0,o.kt)("h3",{id:"object-based-controller"},"Object-Based Controller"),(0,o.kt)("p",null,"Controllers can be placed anywhere in your application project as long as they can be imported into the router file. You can create a controller using a regular JavaScript object. Each controller key has a value that works like a router action. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import type { Request } from "@lunoxjs/core";\n\nconst WelcomeController = {\n  home: async (req: Request) => {\n    // Access request data\n    const something = req.get("something");\n\n    // Access user session\n    const user = await req.auth().user();\n\n    // Perform complex logic\n    return {\n      something,\n      user,\n    };\n  },\n};\n\nexport default WelcomeController;\n')),(0,o.kt)("h3",{id:"class-based-controller"},"Class-Based Controller"),(0,o.kt)("p",null,"For more advanced usage, you can create a class-based controller. Just create a class that extends the Lunox base ",(0,o.kt)("inlineCode",{parentName:"p"},"Controller")," class. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Request, Controller } from "@lunoxjs/core";\n\nclass WelcomeController extends Controller {\n  async home(req: Request) {\n    return view("home", { message: "Hello world" });\n  }\n}\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can generate a controller file using the ",(0,o.kt)("inlineCode",{parentName:"p"},"artisan make:controller")," command:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# This will create a class-based controller\npnpm artisan make:controller ControllerName\n\n# To create an object-based controller, add the --lite or -L option\npnpm artisan make:controller ControllerName -L\n# or\npnpm artisan make:controller ControllerName --lite\n"))),(0,o.kt)("h2",{id:"using-controllers-in-routes"},"Using Controllers in Routes"),(0,o.kt)("p",null,"After creating a controller, you can import it into the router and use it in your routes. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Route } from "@lunoxjs/core/facades";\nimport WelcomeController from "app/Http/Controllers/WelcomeController";\n\n// Example usage of object-based controller\nRoute.get("home", WelcomeController.home);\n\n// Example usage of class-based controller\nRoute.get("home", [WelcomeController, "home"]);\n')),(0,o.kt)("h2",{id:"controller-middleware"},"Controller Middleware"),(0,o.kt)("p",null,"Middleware can be assigned to the controller's routes in your route files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'Route.get("/profile", [UserController, "show"]).middleware("auth");\n')),(0,o.kt)("p",null,"Alternatively, you can specify middleware within your controller's constructor. Using the ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware")," method within your controller's constructor, you can assign middleware to the controller's actions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'class UserController extends Controller {\n  constructor() {\n    super();\n    this.middleware("auth");\n    this.middleware("log").only("index");\n    this.middleware("subscribed").except("store");\n  }\n}\n')))}p.isMDXComponent=!0}}]);